name: Continuous Build and Release

on:
  push:
    branches:
      - master  # or master, depending on your default branch
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: OlyVIADownloader-linux-amd64
            binary_name: OlyVIADownloader
          - os: windows-latest
            platform: windows
            artifact_name: OlyVIADownloader-windows-amd64.exe
            binary_name: OlyVIADownloader.exe
          - os: macos-latest
            platform: macos
            artifact_name: OlyVIADownloader-darwin-amd64
            binary_name: OlyVIADownloader

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: 'stable'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: nimble install -y

      - name: Build release binary
        run: |
          nimble build -d:release --opt:size --passC:"-flto" --passL:"-s"
          
      - name: Rename binary
        shell: bash
        run: |
          if [ "${{ matrix.platform }}" = "windows" ]; then
            mv ${{ matrix.binary_name }} ${{ matrix.artifact_name }}
          else
            mv ${{ matrix.binary_name }} ${{ matrix.artifact_name }}
            chmod +x ${{ matrix.artifact_name }}
          fi

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  release:
    name: Create or Update Continuous Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -la ./artifacts/

      - name: Generate build info
        id: build_info
        run: |
          echo "date=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "sha_long=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Delete old continuous release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: continuous
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
        continue-on-error: true

      - name: Create continuous release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: continuous
          name: Continuous Build
          body: |
            ## Continuous Build
            
            **⚠️ This is an automated build from the latest commit on the master branch.**
            
            - **Build Date**: ${{ steps.build_info.outputs.date }}
            - **Commit**: ${{ steps.build_info.outputs.sha_long }}
            - **Short SHA**: ${{ steps.build_info.outputs.sha_short }}
            
            ### Latest Changes
            ${{ github.event.head_commit.message }}
            
            ### Downloads
            - **Linux**: `OlyVIADownloader-linux-amd64`
            - **macOS**: `OlyVIADownloader-darwin-amd64`
            - **Windows**: `OlyVIADownloader-windows-amd64.exe`
            
            ---
            *Note: This release is automatically updated with each commit to the master branch.*
          artifacts: |
            ./artifacts/OlyVIADownloader-linux-amd64/OlyVIADownloader-linux-amd64
            ./artifacts/OlyVIADownloader-darwin-amd64/OlyVIADownloader-darwin-amd64
            ./artifacts/OlyVIADownloader-windows-amd64.exe/OlyVIADownloader-windows-amd64.exe
          allowUpdates: true
          removeArtifacts: true
          makeLatest: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to release (alternative method)
        if: failure()
        run: |
          # Fallback if the above step fails
          gh release create continuous \
            --title "Continuous Build" \
            --notes "Automated build from commit ${{ github.sha }}" \
            --prerelease \
            --target ${{ github.sha }} \
            ./artifacts/OlyVIADownloader-linux-amd64/OlyVIADownloader-linux-amd64 \
            ./artifacts/OlyVIADownloader-darwin-amd64/OlyVIADownloader-darwin-amd64 \
            ./artifacts/OlyVIADownloader-windows-amd64.exe/OlyVIADownloader-windows-amd64.exe \
            || gh release upload continuous \
            ./artifacts/OlyVIADownloader-linux-amd64/OlyVIADownloader-linux-amd64 \
            ./artifacts/OlyVIADownloader-darwin-amd64/OlyVIADownloader-darwin-amd64 \
            ./artifacts/OlyVIADownloader-windows-amd64.exe/OlyVIADownloader-windows-amd64.exe \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
